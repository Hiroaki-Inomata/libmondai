#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
AC_INIT(src)

LIBMONDAI_MAJOR_VERSION=1
LIBMONDAI_MINOR_VERSION=2
LIBMONDAI_MICRO_VERSION=1

LIBMONDAI_VERSION=$LIBMONDAI_MAJOR_VERSION.$LIBMONDAI_MINOR_VERSION.$LIBMONDAI_MICRO_VERSION
LTVERSION=`expr $LIBMONDAI_MAJOR_VERSION + $LIBMONDAI_MINOR_VERSION`:$LIBMONDAI_MICRO_VERSION:$LIBMONDAI_MINOR_VERSION

AC_SUBST(LIBMONDAI_MAJOR_VERSION)
AC_SUBST(LIBMONDAI_MINOR_VERSION)
AC_SUBST(LIBMONDAI_MICRO_VERSION)

AC_SUBST(LIBMONDAI_VERSION)
AC_SUBST(LTVERSION)

AM_INIT_AUTOMAKE(libmondai, $LIBMONDAI_VERSION)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_PROG_INSTALL
AM_PROG_LIBTOOL
AC_PROG_MAKE_SET

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([unistd.h dirent.h fnmatch.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl ***************************************************************************
dnl i18n feture
dnl ***************************************************************************

LIBMONDAI_I18N=0
AC_ARG_WITH(i18n,
	[  --without-i18n          link with iconv],
	[USE_I18N="no"],
	[
	AC_DEFINE(WITH_I18N,1,"")
	LIBMONDAI_I18N=1
	USE_I18N="yes"
])
AC_SUBST(LIBMONDAI_I18N)

dnl ***************************************************************************
dnl Add all the cflags & libs needed for the libfixed modules.
dnl ***************************************************************************

AC_PATH_PROG(libfixed_config, libfixed-config)
if test x$libfixed_config = xno; then
  AC_MSG_ERROR(Couldn't find libfixed-config)
fi
FIXED_CFLAGS=`$libfixed_config --cflags 2>/dev/null`
FIXED_LIBS=`$libfixed_config --libs 2>/dev/null`
AC_SUBST(FIXED_LIBS)
AC_SUBST(FIXED_CFLAGS)

dnl ***************************************************************************
dnl Add all the cflags & libs needed for the glib modules.
dnl ***************************************************************************

AC_PATH_PROG(GLIB_CONFIG,glib-config,no)
if test x$GLIB_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find glib-config)
fi
GLIB_LIBS=`glib-config --libs`
GLIB_CFLAGS=`glib-config --cflags`
AC_SUBST(GLIB_LIBS)
AC_SUBST(GLIB_CFLAGS)

dnl ***************************************************************************
dnl Add all the cflags & libs needed for the XML modules.
dnl ***************************************************************************
AC_ARG_WITH(xml2,
	[  --with-xml2             Use libxml2],[
	AC_PATH_PROG(XML_CONFIG,xml2-config,no)
	if test x$XML_CONFIG = xno; then
	  AC_MSG_ERROR(Couldn't find xml2-config)
	fi
	XML_LIBS=`xml2-config --libs`
	XML_CFLAGS=`xml2-config --cflags`
	AC_SUBST(XML_LIBS)
	AC_SUBST(XML_CFLAGS)
	AC_DEFINE(USE_XML,2,"")
	AC_DEFINE(USE_XML2,1,"")
	USE_LIBXML2="yes"],[
	USE_LIBXML2="no"
])		

AC_ARG_WITH(xml,
	[  --with-xml=<encode>     Use libxml],[
	if test $withval != yes; then
	  encode=$withval
	else
	  encode="euc-jp"
	fi
	AC_PATH_PROG(XML_CONFIG,xml-config,no)
	if test x$XML_CONFIG = xno; then
	  AC_MSG_ERROR(Couldn't find xml-config)
	fi
	XML_LIBS=`xml-config --libs`
	XML_CFLAGS=`xml-config --cflags`
	AC_SUBST(XML_LIBS)
	AC_SUBST(XML_CFLAGS)
	AC_DEFINE(USE_XML,1,"")
	AC_DEFINE_UNQUOTED(LIBXML_CODE,"$encode","")
	USE_LIBXML=$encode],[
	USE_LIBXML="no"
])

dnl ***************************************************************************

AC_OUTPUT([
Makefile
src/Makefile
tools/Makefile
src/libmondai.h
docs/Makefile
libmondai-config
libmondai-config.1
], [chmod +x libmondai-config])

dnl ***************************************************************************
dnl output result
dnl ***************************************************************************

echo ""
echo "libmondai Configuration:"
echo ""
echo "  VERSION:               $LIBMONDAI_VERSION"
echo "  LTVERSION:             $LTVERSION"
echo "  Use i18n:              $USE_I18N"
echo "  Use libxml2:           $USE_LIBXML2"
echo "  Use libxml:            $USE_LIBXML"
echo ""
